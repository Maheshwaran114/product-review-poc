name: CI/CD

on:
  push:
    branches: ["develop"]
  pull_request:
    branches: ["develop"]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      # Backend Build and Test
      - name: Set up Node for backend
        uses: actions/setup-node@v2
        with:
          node-version: '18.18'
      - name: Install dependencies (backend)
        working-directory: backend
        run: npm install
      - name: Run tests (backend)
        working-directory: backend
        run: npm test

      # Frontend Build and Test
      - name: Set up Node for frontend
        uses: actions/setup-node@v2
        with:
          node-version: '18.18'
      - name: Install dependencies (frontend)
        working-directory: frontend/frontend-app
        run: npm install
      - name: Run tests (frontend)
        working-directory: frontend/frontend-app
        run: npm test

      # Build Docker Images
      - name: Build Docker images
        run: docker compose build --no-cache --progress=plain

  integration-deploy-and-test:
    name: Integration Deploy & Test
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      # Deploy Integration Environment (using an override file if needed)
      - name: Deploy Integration Environment
        run: |
          docker compose -f docker-compose.yml -f docker-compose.integration.yml up -d

      # Wait for Services to Become Healthy
      - name: Wait for Services
        run: |
          echo "Waiting for services to be ready..."
          sleep 30

      # Run Integration Tests
      - name: Run Integration Tests
        run: |
          cd frontend/frontend-app
          npm run integration-test

      # Tear Down Integration Environment
      - name: Tear Down Integration Environment
        if: always()
        run: |
          docker compose -f docker-compose.yml -f docker-compose.integration.yml down
